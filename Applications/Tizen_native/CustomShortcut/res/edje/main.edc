// SPDX-License-Identifier: Apache-2.0
/**
 * Copyright (C) 2020 Jihoon Lee <jhoon.it.lee@samsung.com>
 *
 * @file main.edc
 * @date 15 May 2020
 * @brief TIZEN Native Example App main edc that describes view behavior
 * @see  https://github.com/nnstreamer/nntrainer
 * @author Jihoon Lee <jhoon.it.lee@samsung.com>
 * @bug No known bugs except for NYI items
 */

#define PART_BUTTON(button_name, label, x1, y1, x2, y2) \
  part { \
    name: button_name"/bg"; \
    type: RECT; \
    description { \
      state: "default" 0.0; \
      rel1.relative: x1 y1; \
      rel2.relative: x2 y2; \
      color: 253 193 7 255; \
      visible: 1; \
    } \
    description { \
      state: "focused" 0.0; \
      inherit: "default"; \
      color: 224 168 0 127; \
    } \
    description { \
      state: "disabled" 0.0; \
      inherit: "default"; \
      color: 108 117 125 127; \
    } \
  } \
  part { \
    name: button_name"/label"; \
    type: TEXT; \
    description { \
      state: "default" 0.0; \
      color: 0 0 0 255; \
      rel1 { \
        relative: 0.1 0.1; \
        to: button_name"/bg"; \
      } \
      rel2 { \
        relative: 0.9 0.9; \
        to: button_name"/bg"; \
      } \
      text { \
        text: label ; \
        size: 28; \
        align: 0.5 0.5; \
      } \
    } \
    description { \
      state: "disabled" 0.0; \
      inherit: "default"; \
      color: 255 255 255 127; \
    } \
  }

#define PART_TITLE(title_name, label) \
  part { \
    name: title_name; \
    type: TEXT; \
    description { \
      state: "default" 0.0; \
      color: 255 255 255 255; \
      text { \
        text: label; \
        font: "Tizen:style=regular"; \
        size: 20; \
        align: 0.5 0.1; \
      } \
    } \
  }

#define PROGRAM_BUTTON(target, on_click_sig, on_click_sig_source) \
  program { \
    name: target"/press"; \
    signal: "mouse,down,*"; \
    source: target"/*"; \
    filter: target"/label" "default"; \
    transition: LINEAR 0.5; \
    script { \
      set_state(PART:target"/bg", "focused", 0.0); \
    } \
  } \
  program { \
    name: target"/release"; \
    signal: "mouse,up,*"; \
    source: target"/*"; \
    filter: target"/label" "default"; \
    transition: LINEAR 0.5; \
    script { \
      set_state(PART:target"/bg", "default", 0.0); \
    } \
  } \
  program { \
    name: target"/click"; \
    signal: "mouse,clicked,*"; \
    source: target"/*"; \
    filter: target"/label" "default"; \
    script { \
      emit(on_click_sig, on_click_sig_source); \
    } \
  } \
  program { \
    name: target"/disable"; \
    signal: target",disable"; \
    source: ""; \
    script { \
      set_state(PART:target"/bg", "disabled", 0.0); \
      set_state(PART:target"/label", "disabled", 0.0); \
    } \
  } \
  program { \
    name: target"/enable"; \
    signal: target",enable"; \
    source: ""; \
    script { \
      set_state(PART:target"/bg", "default", 0.0); \
      set_state(PART:target"/label", "default", 0.0); \
    } \
  }

collections {
  group {
    name: "home";
    parts {
      PART_TITLE("home/title", "Select actions...")
      PART_BUTTON("home/to_train", "train", 0.1, 0.3, 0.45, 0.7)
      PART_BUTTON("home/to_eval", "eval", 0.55, 0.3, 0.9, 0.7)
    }
    programs {
      PROGRAM_BUTTON("home/to_train", "routes/to", "draw:train")
      PROGRAM_BUTTON("home/to_eval", "routes/to", "draw:inference")
    }
  }
  group {
    name: "draw";
    parts {
      PART_TITLE("draw/title", "draw for üòä")
      part {
        name: "draw/label";
        type: TEXT;
        description {
          state: "default" 0.0;
          rel1.relative: 0.0 0.2;
          rel2.relative: 1.0 0.8;
          text {
            text: "üòä";
            size: 150;
            align: 0.5 0.5;
          }
        }
      }
      part {
        name: "draw/canvas";
        type: SWALLOW;
        description { state: "default" 0.0;
          rel1.relative: 0.0 0.2;
          rel2.relative: 1.0 0.8;
        }
      }
      PART_BUTTON("draw/reset", "‚Ü©", 0.2, 0.83, 0.45, 0.9)
      PART_BUTTON("draw/proceed", "‚ñ∂Ô∏è", 0.55, 0.83, 0.81, 0.9)
    }
    programs {
      PROGRAM_BUTTON("draw/reset", "draw/reset", "")
      PROGRAM_BUTTON("draw/proceed", "draw/proceed", "")
    }
  }
  group {
    name: "train_progress";
    parts {
      part {
        name: "train_progress/epoch";
        type: TEXT;
        description {
          state: "default" 0.0;
          color: 255 255 255 255;
          rel1.relative: 0.0 0.0;
          rel2.relative: 1.0 0.3;
          text {
            text: "";
            size: 58;
            align: 0.5 0.5;
          }
        }
        description {
          state: "done" 0.0;
          inherit: "default" 0.0;
        }
      }
      part {
        name: "train_progress/accuracy";
        type: TEXT;
        description {
          state: "default" 0.0;
          color: 255 255 255 255;
          rel1.relative: 0.0 0.3;
          rel2.relative: 1.0 0.6;
          text {
            text: "";
            size: 78;
            align: 0.5 0.5;
          }
        }
      }
      part {
        name: "train_progress/loss";
        type: TEXT;
        description {
          state: "default" 0.0;
          color: 255 255 255 255;
          rel1.relative: 0.0 0.6;
          rel2.relative: 1.0 0.9;
          text {
            text: "";
            size: 58;
            align: 0.5 0.5;
          }
        }
      }
    }
  }
  group {
    name: "train_result";
    parts {
      PART_TITLE("train_result/title", "train finished")
      PART_BUTTON("train_result/go_back", "acc: ", 0.1, 0.3, 0.9, 0.7)
    }
    programs {
      PROGRAM_BUTTON("train_result/go_back", "to_main", "")
    }
  }
  group {
    name: "test_result";
    parts {
      PART_TITLE("test_result/title", "eval in progress")
      part {
        name: "test_result/label";
        type: TEXT;
        description {
          state: "default" 0.0;
          rel1.relative: 0.0 0.2;
          rel2.relative: 1.0 0.8;
          text {
            text: "Guess...";
            size: 100;
            align: 0.5 0.5;
            text_class: "test_result/label/class";
          }
        }
    }
  }
}
