# Network Section : Network
[Network]
Type = NeuralNetwork	# Network Type : Regression, KNN, NeuralNetwork
Learning_rate = 0.0001 	# Learning Rate
Decay_rate = 0.96	# for the decay_rate for the decayed learning rate
Decay_steps = 1000       # decay step for the exponential decayed learning rate
Epoch = 30000		# Epoch
Optimizer = adam 	# Optimizer : sgd (stochastic gradien decent),
 	    		#             adam (Adamtive Moment Estimation)
Cost = cross  		# Cost(loss) function : mse (mean squared error)
                        #                       cross (cross entropy)
Model = "model.bin"  	# model path to save / read
minibatch = 32		# mini batch size
beta1 = 0.9 		# beta 1 for adam
beta2 = 0.9999	# beta 2 for adam
epsilon = 1e-7	# epsilon for adam

[DataSet]
BufferSize=100
TrainData="trainingSet.dat"
ValidData="trainingSet.dat"
LabelData="label.dat"

[inputlayer]
Type = input
Input_Shape = 1:1:62720	# Input Layer Dimension
Bias_init_zero = true	# Zero Bias
Normalization = true

[outputlayer]
Type = fully_connected
Unit = 10		# Output Layer Dimension ( = Weight Width )
Bias_init_zero = true
Activation = softmax 	# activation : sigmoid, softmax
Weight_Decay = l2norm
weight_Decay_Lambda = 0.005
