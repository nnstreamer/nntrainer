# Network Section : Network
[Model]
Type = NeuralNetwork	# Network Type : Regression, KNN, NeuralNetwork
Save_Path = "model.bin"  	# model path to save / read
# loss = none           # This also works
batch_size = 1         # batch size

[mnist]
backbone = "mnist.ini"
Input_Shape = 1:28:28

# Original Model
# [inputlayer]
# Type = input
# Input_Shape = 1:28:28
#
# [conv2d_c1_layer]
# Type = conv2d
# input_layers=inputlayer
# kernel_size = 5,5
# bias_initializer=zeros
# Activation=sigmoid
# weight_initializer = xavier_uniform
# filters = 6
# stride = 1,1
# padding = 0,0
#
# [pooling2d_p1]
# Type=pooling2d
# input_layers=conv2d_c1_layer
# pool_size = 2,2
# stride =2,2
# padding = 0,0
# pooling = average
#
# [conv2d_c2_layer]
# Type = conv2d
# input_layers=pooling2d_p1
# kernel_size = 5,5
# bias_initializer=zeros
# Activation=sigmoid
# weight_initializer = xavier_uniform
# filters = 12
# stride = 1,1
# padding = 0,0
#
# [pooling2d_p2]
# Type=pooling2d
# input_layers=conv2d_c2_layer
# pool_size = 2,2
# stride =2,2
# padding = 0,0
# pooling = average
#
# [flatten]
# Type=flatten
# input_layers=pooling2d_p2
#
# [outputlayer]
# Type = fully_connected
# input_layers=flatten
# Unit = 10		# Output Layer Dimension ( = Weight Width )
# weight_initializer = xavier_uniform
# bias_initializer = zeros
##### Remove activation for feature extraction
# Activation = softmax
